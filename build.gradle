plugins {
  id "com.github.johnrengelman.shadow" version "7.1.2" apply false
  id "io.micronaut.application" version "$micronautGradlePluginVersion" apply false
  id "io.micronaut.library" version "$micronautGradlePluginVersion" apply false
  id 'ch.onstructive.gradle.release' version "${onstructiveGradlePluginVersion}" apply false
  id 'ch.onstructive.gradle.codestyle' version "${onstructiveGradlePluginVersion}" apply false
  id 'gg.jte.gradle' version "${jteVersion}" apply false
}

subprojects { subproject ->

  apply plugin: 'ch.onstructive.gradle.release'
  apply plugin: 'ch.onstructive.gradle.codestyle'

  group = "ch.silviowangler.oms"

  if (subproject.name == "${rootProject.name}-server" || subproject.name == "${rootProject.name}-tests-jte") {
    apply plugin: 'io.micronaut.application'
  } else {
    apply plugin: 'io.micronaut.library'
  }

  dependencies {

    annotationProcessor("org.projectlombok:lombok")
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    annotationProcessor("io.micronaut:micronaut-http-validation")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut:micronaut-runtime")

    compileOnly("org.projectlombok:lombok")

    implementation("io.micronaut:micronaut-validation")
    implementation("jakarta.annotation:jakarta.annotation-api")

    implementation "org.mapstruct:mapstruct:${mapstructVersion}"

    implementation "ch.onstructive.commons:onstructive-commons-java-commons:${onstructiveCommons}"
    implementation "ch.onstructive.commons:onstructive-commons-micronaut-commons:${onstructiveCommons}"
    implementation "ch.onstructive.commons:onstructive-commons-micronaut-jackson-commons:${onstructiveCommons}"
  }

  java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
  }
  micronaut {
    runtime("netty")
    testRuntime("spock2")
    processing {
      incremental(true)
      annotations("ch.silviowangler.oms.*")
    }
  }

  publishing {
    repositories {
      maven {
        name = "GitHubPackages"
        url = "https://maven.pkg.github.com/saw303/output-management-system"
        credentials {
          username = System.getenv("USERNAME")
          password = System.getenv("TOKEN")
        }
      }
    }
  }
}
