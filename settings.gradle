pluginManagement {
    repositories {
        maven {
            credentials {
                // access properties available to settings.gradle
                Map<String, Object> props = settings.extensions.extraProperties.properties
                username props['artifactory_user'] as String ?: System.getenv('M2_USER')
                password props['artifactory_password'] as String ?: System.getenv('M2_PWD')
            }
            url repoUrl
        }
        gradlePluginPortal()
    }
}

dependencyResolutionManagement {
    repositories {
        maven {
            credentials {
                // access properties available to settings.gradle
                Map<String, Object> props = settings.extensions.extraProperties.properties
                username props['artifactory_user'] as String ?: System.getenv('M2_USER')
                password props['artifactory_password'] as String ?: System.getenv('M2_PWD')
            }
            url repoUrl
        }
    }
}

rootProject.name="oms"

include 'template-engine-api'
include 'template-engine-thymeleaf'
include 'server'
include 'services'
include 'services-api'
include 'rest-api'

rootProject.children.each { it.name = "${rootProject.name}-${it.name}" }
